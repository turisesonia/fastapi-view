import typing as t
from pathlib import Path

from pydantic import computed_field
from pydantic_settings import BaseSettings, SettingsConfigDict


class InertiaConfig(BaseSettings):
    assets_version: str = ""

    model_config = SettingsConfigDict(
        extra="ignore",
        case_sensitive=False,
        env_file=".env",
        env_file_encoding="utf-8",
        env_prefix="INERTIA_",
    )


class ViteConfig(BaseSettings):
    # development or production mode.
    dev_mode: bool = False

    # Vite dev server protocol (http / https)
    dev_server_protocol: str = "http"

    # Vite dev server hostname.
    dev_server_host: str = "localhost"

    # Vite dev server port.
    dev_server_port: int = 5173

    # Vite dev server path to hot module replacement.
    ws_client_path: str = "@vite/client"

    # Path to vite compiled assets (only used in production mode).
    assets_path: t.Optional[str] = None

    # Vite static asset url
    static_url: t.Optional[str] = None

    # Path to your manifest file generated by Vite.
    manifest_path: Path = "dist/manifest.json"

    @computed_field
    @property
    def dev_server_url(self) -> str:
        return "{protocol}://{server_host}:{server_port}".format(
            protocol=self.dev_server_protocol,
            server_host=self.dev_server_host,
            server_port=self.dev_server_port,
        )

    @computed_field
    @property
    def dev_websocket_url(self) -> str:
        return "{dev_server_url}/{ws_client_path}".format(
            dev_server_url=self.dev_server_url,
            ws_client_path=self.ws_client_path,
        )

    model_config = SettingsConfigDict(
        extra="ignore",
        case_sensitive=False,
        env_file=".env",
        env_file_encoding="utf-8",
        env_prefix="VITE_",
    )


inertia_config = InertiaConfig()
